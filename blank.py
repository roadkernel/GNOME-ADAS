import telebot
import supabase
import uuid

bot = telebot.TeleBot("TELE_API")
supabase_client = supabase.create_client("LINK_TO_BASE", "SUPABASE_KEY")

edit_mode = False
registration_keys = ['TELEGRAM_USER_ID', 'TELEGRAM_USER_ID', 'TELEGRAM_USER_ID', 'TELEGRAM_USER_ID']

@bot.message_handler(commands=['start'])
def handle_start(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if str(user_id) in registration_keys:
        user_exists = supabase_client.table("users").select("*").eq("user_id", user_id).execute()

        if user_exists.data and len(user_exists.data) > 0:
            user_data = user_exists.data[0]
            bot.send_message(chat_id, f"üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:\n\n‚îå Id: {user_data['user_id']}\n‚îî –ò–º—è: {user_data['name']}\n\n/start - –õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ–∫—Ç.\n/alert - –°–æ–∑–¥–∞—Ç—å –∞–ª–µ—Ä—Ç.\n/alertfl - –§–ª—É–¥ –ø—è—Ç—å—é –∞–ª–µ—Ä—Ç–∞–º–∏.\n/edit - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ!\n/faq - –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n/contacts - C–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.")
        else:
            bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
            bot.register_next_step_handler(message, handle_name)
    else:
        bot.send_message(chat_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.")

@bot.message_handler(commands=['alert'])
def handle_alert(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    if str(user_id) in registration_keys:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 10:")
        bot.register_next_step_handler(message, handle_number, user_id)
    else:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n@TELEGRAM_TAG")

def handle_number(message, user_id):
    chat_id = message.chat.id
    number = message.text

    if not number.isdigit() or int(number) < 1 or int(number) > 10:
        bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 10:")
        bot.register_next_step_handler(message, handle_number, user_id)
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:")
        bot.register_next_step_handler(message, handle_description, user_id, number)

def handle_description(message, user_id, number):
    chat_id = message.chat.id
    description = message.text

    users = supabase_client.table("users").select("*").execute().data
    for user in users:
        alert_message = f"üö®ALERT!\n\n‚îå –û–ø–∞—Å–Ω–æ—Å—Ç—å: {number}\n‚îú –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n‚îú –û—Ç ID: {user_id}, –ò–º—è: {message.from_user.first_name}\n‚îî –£–¥–∞—á–∏, –ì–Ω–æ–º—ã!"
        bot.send_message(user['user_id'], alert_message)

    bot.send_message(chat_id, "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")

@bot.message_handler(commands=['alertfl'])
def handle_alertfl(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if str(user_id) in registration_keys:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 10:")
        bot.register_next_step_handler(message, handle_numberfl, user_id)
    else:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n@TELEGRAM_TAG")

def handle_numberfl(message, user_id):
    chat_id = message.chat.id
    number = message.text

    if not number.isdigit() or int(number) < 1 or int(number) > 10:
        bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 10:")
        bot.register_next_step_handler(message, handle_numberfl, user_id)
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:")
        bot.register_next_step_handler(message, handle_descriptionfl, user_id, number)

def handle_descriptionfl(message, user_id, number):
    chat_id = message.chat.id
    description = message.text

    users = supabase_client.table("users").select("*").execute().data
    for user in users:
        alert_message = f"üö®ALERT!\n\n‚îå –û–ø–∞—Å–Ω–æ—Å—Ç—å: {number}\n‚îú –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n‚îú –û—Ç ID: {user_id}, –ò–º—è: {message.from_user.first_name}\n‚îî –£–¥–∞—á–∏, –ì–Ω–æ–º—ã!"
        for _ in range(5):
            bot.send_message(user['user_id'], alert_message)

    bot.send_message(chat_id, "–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")

def handle_name(message):
    chat_id = message.chat.id
    name = message.text

    user_id = message.from_user.id 
    user_uuid = uuid.uuid4()

    data = {
        "user_id": user_id,
        "name": name,
        "uuid": str(user_uuid)
    }
    supabase_client.table("users").insert(data).execute()

    bot.send_message(chat_id, f"üë®‚Äçüíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:\n\n‚îå Id: {user_id}\n‚îî –ò–º—è: {name}\n\n/start- –õ–∏—á–Ω—ã–π –ö–∞–±–∏–Ω–µ–∫—Ç.\n/alert - –°–æ–∑–¥–∞—Ç—å –∞–ª–µ—Ä—Ç.\n/alertfl - –§–ª—É–¥ –ø—è—Ç—å—é –∞–ª–µ—Ä—Ç–∞–º–∏.\n/edit - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ!\n/faq - –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n/contacts - C–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.")

@bot.message_handler(commands=['contacts'])
def handle_edit(message):
    chat_id = message.chat.id
    user_id = message.from_user.id 
    if str(user_id) in registration_keys:
        bot.send_message(chat_id, "Contacts text")
    else:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n@TELEGRAM_TAG")

@bot.message_handler(commands=['faq'])
def handle_edit(message):
    chat_id = message.chat.id
    user_id = message.from_user.id 
    if str(user_id) in registration_keys:
        bot.send_message(chat_id, "FAQ text")
    else:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n@TELEGRAM_TAG")

@bot.message_handler(commands=['edit'])
def handle_edit(message):
    global edit_mode
    chat_id = message.chat.id
    user_id = message.from_user.id 

    if str(user_id) in registration_keys:

        if message.text.strip().lower() != '/edit':
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /edit, —á—Ç–æ–±—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ.")
            return

        edit_mode = True

        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=2)
        button_name = telebot.types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è')
        keyboard.add(button_name)
    else:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n@TELEGRAM_TAG")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    global edit_mode
    chat_id = message.chat.id
    text = message.text.lower()

    if edit_mode:
        if text == '–∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è':
            bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:")
            bot.register_next_step_handler(message, handle_name_update)
        else:
            bot.send_message(chat_id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä.")

def handle_name_update(message):
    global edit_mode
    chat_id = message.chat.id
    name = message.text
    supabase_client.table("users").update({"name": name}).eq("user_id", message.from_user.id).execute()
    bot.send_message(chat_id, "–ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.", reply_markup=telebot.types.ReplyKeyboardRemove())
    edit_mode = False

bot.polling()